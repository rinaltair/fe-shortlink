{"version":3,"file":"js/9542.1eeaeb3b.js","mappings":"wNAAO,MAAMA,EAAgBC,IAC3B,MAAMC,EAAoBC,IACxB,MAAMC,EAAQC,KAAKC,MAAMH,GAAWE,KAAKC,MAAM,IAAID,MAC7CE,EAAUC,KAAKC,MAAOL,EAAQ,IAAQ,IACtCM,EAAUF,KAAKC,MAAOL,EAAQ,IAAO,GAAM,IAC3CO,EAAQH,KAAKC,MAAOL,EAAQ,KAAoB,IAChDQ,EAAOJ,KAAKC,MAAML,EAAQ,OAEhC,MAAO,CACLA,QACAQ,OACAD,QACAD,UACAH,UACD,EAGGM,EAAkBA,CAACC,EAAOX,KAC9B,MAAMY,EAAWD,EAAME,cAAc,eAC/BC,EAAYH,EAAME,cAAc,gBAChCE,EAAcJ,EAAME,cAAc,kBAClCG,EAAcL,EAAME,cAAc,kBAElCI,EAAcA,KAClB,MAAMC,EAAInB,EAAiBC,GAE3BY,EAASO,UAAYD,EAAET,KACvBK,EAAUK,WAAa,IAAMD,EAAEV,OAAOY,OAAO,GAC7CL,EAAYI,WAAa,IAAMD,EAAEX,SAASa,OAAO,GACjDJ,EAAYG,WAAa,IAAMD,EAAEd,SAASgB,OAAO,GAE7CF,EAAEjB,OAAS,GACboB,cAAcC,EAChB,EAGFL,IACA,MAAMK,EAAeC,YAAYN,EAAa,IAAK,EAErD,IAAIO,EAAO1B,EAAQ2B,aAAa,kBACpBC,GAARF,IACFA,EAAOtB,KAAKC,MAAM,IAAID,MAAU,QAElC,MAAMyB,EAAW,IAAIzB,KAAKsB,GAC1Bd,EAAgBZ,EAAS6B,EAAS,E,yQCQpC,MAAMC,GAAUC,EAAAA,EAAAA,IAAI,M,OACpBC,EAAAA,EAAAA,KAAU,IAAMjC,EAAa+B,EAAQG,S,+wEClDrC,MAAMC,EAAc,EAEpB,O","sources":["webpack://hopeui-vue/./src/utilities/countdown.js","webpack://hopeui-vue/./src/views/errors/MaintenancePage.vue","webpack://hopeui-vue/./src/views/errors/MaintenancePage.vue?6bad"],"sourcesContent":["export const useCountdown = (refElem) => {\n  const getTimeRemaining = (endtime) => {\n    const total = Date.parse(endtime) - Date.parse(new Date())\n    const seconds = Math.floor((total / 1000) % 60)\n    const minutes = Math.floor((total / 1000 / 60) % 60)\n    const hours = Math.floor((total / (1000 * 60 * 60)) % 24)\n    const days = Math.floor(total / (1000 * 60 * 60 * 24))\n\n    return {\n      total,\n      days,\n      hours,\n      minutes,\n      seconds\n    }\n  }\n\n  const initializeClock = (clock, endtime) => {\n    const daysSpan = clock.querySelector('[data-days]')\n    const hoursSpan = clock.querySelector('[data-hours]')\n    const minutesSpan = clock.querySelector('[data-minutes]')\n    const secondsSpan = clock.querySelector('[data-seconds]')\n\n    const updateClock = () => {\n      const t = getTimeRemaining(endtime)\n\n      daysSpan.innerHTML = t.days\n      hoursSpan.innerHTML = ('0' + t.hours).slice(-2)\n      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2)\n      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2)\n\n      if (t.total <= 0) {\n        clearInterval(timeinterval)\n      }\n    }\n\n    updateClock()\n    const timeinterval = setInterval(updateClock, 1000)\n  }\n  let time = refElem.getAttribute('data-date')\n  if (time == undefined) {\n    time = Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000\n  }\n  const deadline = new Date(time)\n  initializeClock(refElem, deadline)\n}\n","<template>\n  <b-container fluid class=\"p-0\">\n    <div class=\"iq-maintenance text-center\">\n      <img src=\"@/assets/images/error/01.png\" class=\"img-fluid mb-4\" alt=\"maintenance\" loading=\"lazy\" />\n      <div class=\"maintenance-bottom text-white pb-0\">\n        <div class=\"bg-primary\" style=\"background: transparent; height: 320px\">\n          <div class=\"gradient-bottom\">\n            <div class=\"bottom-text general-zindex\">\n              <h1 class=\"mb-2 text-white\">Hang on! We are under maintenance</h1>\n              <p>It will not take a long time till we get the error fiked. We wii live again in</p>\n              <ul class=\"countdown d-flex justify-content-center align-items-center list-inline\" data-date=\"May 30 2025 20:20:22\" ref=\"element\">\n                <li><span data-days>0</span>Days</li>\n                <li><span data-hours>0</span>Hours</li>\n                <li><span data-minutes>0</span>Minutes</li>\n                <li><span data-seconds>0</span>Seconds</li>\n              </ul>\n              <div class=\"w-50 mx-auto mt-2\">\n                <div class=\"input-group search-input search-input\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Enter your mail\" />\n                  <a href=\"#\" class=\"btn bg-white text-primary ms-2 rounded\">Notify Me</a>\n                </div>\n              </div>\n            </div>\n            <div class=\"c xl-circle\">\n              <div class=\"c lg-circle\">\n                <div class=\"c md-circle\">\n                  <div class=\"c sm-circle\">\n                    <div class=\"c xs-circle\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"sign-bg\">\n      <svg width=\"280\" height=\"230\" viewBox=\"0 0 431 398\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g opacity=\"0.05\">\n          <rect x=\"-157.085\" y=\"193.773\" width=\"543\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(-45 -157.085 193.773)\" fill=\"#3B8AFF\" />\n          <rect x=\"7.46875\" y=\"358.327\" width=\"543\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(-45 7.46875 358.327)\" fill=\"#3B8AFF\" />\n          <rect x=\"61.9355\" y=\"138.545\" width=\"310.286\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(45 61.9355 138.545)\" fill=\"#3B8AFF\" />\n          <rect x=\"62.3154\" y=\"-190.173\" width=\"543\" height=\"77.5714\" rx=\"38.7857\" transform=\"rotate(45 62.3154 -190.173)\" fill=\"#3B8AFF\" />\n        </g>\n      </svg>\n    </div>\n  </b-container>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useCountdown } from '@/utilities/countdown'\nconst element = ref(null)\nonMounted(() => useCountdown(element.value))\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import script from \"./MaintenancePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MaintenancePage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["useCountdown","refElem","getTimeRemaining","endtime","total","Date","parse","seconds","Math","floor","minutes","hours","days","initializeClock","clock","daysSpan","querySelector","hoursSpan","minutesSpan","secondsSpan","updateClock","t","innerHTML","slice","clearInterval","timeinterval","setInterval","time","getAttribute","undefined","deadline","element","ref","onMounted","value","__exports__"],"sourceRoot":""}